{"ast":null,"code":"var _jsxFileName = \"/Users/flower15922/github-finder/src/components/UserResults.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResults() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users from GitHub API\n  const fetchUsers = async () => {\n    const res = await fetch(`${process.env.REACT_APP_GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN}`\n      }\n    });\n    const data = await res.json();\n    setUsers(data);\n    setLoading(false);\n  };\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-8 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\\"Loading....\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(UserResults, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = UserResults;\nexport default UserResults;\nvar _c;\n$RefreshReg$(_c, \"UserResults\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserResults","_s","users","setUsers","loading","setLoading","fetchUsers","res","fetch","process","env","REACT_APP_GITHUB_URL","headers","Authorization","REACT_APP_GITHUB_TOKEN","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/flower15922/github-finder/src/components/UserResults.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nfunction UserResults() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users from GitHub API\n  const fetchUsers = async () => {\n    const res = await fetch(`${process.env.REACT_APP_GITHUB_URL}/users`, {\n      headers: { Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN}` },\n    });\n    const data = await res.json();\n    setUsers(data);\n    setLoading(false);\n  };\n  if (!loading) {\n    return (\n      <div className=\"grid grid-cols-1 gap-8 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2\">\n        {/* {users.map((user) => {\n          <h3>{user.login}</h3>;\n        })} */}\n        <h1>Success</h1>\n      </div>\n    );\n  } else {\n    return <h3>\"Loading....\"</h3>;\n  }\n}\n\nexport default UserResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,QAAQ,EAAE;MACnEC,OAAO,EAAE;QAAEC,aAAa,EAAE,SAASJ,OAAO,CAACC,GAAG,CAACI,sBAAsB;MAAG;IAC1E,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7Bb,QAAQ,CAACY,IAAI,CAAC;IACdV,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,IAAI,CAACD,OAAO,EAAE;IACZ,oBACEL,OAAA;MAAKkB,SAAS,EAAC,qEAAqE;MAAAC,QAAA,eAIlFnB,OAAA;QAAAmB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEV,CAAC,MAAM;IACL,oBAAOvB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC/B;AACF;AAACrB,EAAA,CA5BQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}